This folder has data from a few tests I did as I was still tinkering with the profiler and adding in tic() and toc(). I used 100,000 particles, and it took on the order of minutes—80 seconds for the sampler after I fixed some wasteful code in the gillespie implementation. 

The first test was to try things out with 100000 samples. The pdf files were too big to open easily in Preview, so …
the second test was after modifying code to make png files. Those took forever to make, so…
 I downsampled before plotting in the third test. 
The fourth test was after I noticed that gillespie could be further optimized by allocating a single exponential distribution object outside the loop. Distributions are objects in Julia, and the memory allocation was slowing down the simulation. ***

The fifth test was after I changed some vector objects [1:5] to range objects 1:5. These differ in Julia, and the savings on memory allocation—saving an array versus its endpoints—seems to have shaved off maybe 1/4 of the run-time. I confirmed this by looking for gillespie.jl lines 114 and 115 in the profiler. Down to 67 seconds from ninety-something. 

Before the 6th test, I noticed more distribution objects being needlessly allocated. My changes to account for this resulted in a slower 6th test, at ~100 seconds. The 7th test was inexplicably slower as well, about 120 seconds. The 8th clocked in at 78, and looking at the profiler output, everything was reasonable: time for vector copies, logpdf evaluation, sampling. Round 9, same thing, was back up to 100 seconds.


The posterior distributions are looking awful: if you notice in run_after_opt_gillespie, one is the right order of magnitude (0.001) as one of the true ones, and the other is too (0.1), except they are backwards! I have checked this with a demo plot to see whether I am insane, but it is labeled correctly, and this keeps happening (the backwardness is still there in the experiment “after_quick_plotting”, and it’s not the first time I’ve noticed it.)

***The fix that I did here could maybe be improved, because I still spawn a distribution object every time I run gillespie().